import type { NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import Image from "next/image";
import ImagePlaceHolder from "../components/ImagePlaceHolder";
import TechnologyCard from "../components/TechnologyCard";
import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const { data: session } = useSession();
  const hello = trpc.useQuery(["example.hello", { text: "from tRPC" }]);
  const userImage = session?.user ? `${session?.user?.image}` : "";

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        <h1 className="text-5xl md:text-[5rem] leading-normal font-extrabold text-gray-700">
          Create <span className="text-purple-300">T3</span> App
        </h1>
        <p className="text-2xl text-gray-700">This stack uses:</p>
        <div className="grid gap-3 pt-3 mt-3 text-center md:grid-cols-2 lg:w-2/3">
          <TechnologyCard
            name="NextJS"
            description="The React framework for production"
            documentation="https://nextjs.org/"
          />
          <TechnologyCard
            name="TypeScript"
            description="Strongly typed programming language that builds on JavaScript, giving you better tooling at any scale"
            documentation="https://www.typescriptlang.org/"
          />
          <TechnologyCard
            name="TailwindCSS"
            description="Rapidly build modern websites without ever leaving your HTML"
            documentation="https://tailwindcss.com/"
          />
          <TechnologyCard
            name="tRPC"
            description="End-to-end typesafe APIs made easy"
            documentation="https://trpc.io/"
          />
        </div>
        <div className="pt-6 text-2xl text-blue-500 flex justify-center items-center w-full">
          {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
        </div>

        {session && (
          <>
            <div>
              <p>
                Hello {session.user?.name}{" "}
                <Image
                  src={userImage}
                  width={30}
                  height={30}
                  placeholder="blur"
                  blurDataURL={ImagePlaceHolder(237, 181, 6)}
                  layout="responsive"
                  alt="image"
                ></Image>
              </p>
              <p>ID: {session.user?.id}</p>
              <p>Email: {session.user?.email}</p>
              <p>Session Expires at: {session.expires}</p>
            </div>
          </>
        )}
      </main>
    </>
  );
};

export default Home;
